/*
  datanode_protocol is an RPC protocol that the datanodes use to talk to the NameNode

  The DataNodes in the cluster send two types of messages to the NameNode:

  1. HeartBeat - A signal sent to the NameNode that lets the NameNode know the DataNode is still alive
                 this information is used by the NameNode to determine whether or not to use a particular
                 DataNode's block.

                 The signal interval is configurable but defaults to 3 seconds.


  2. Block Report - A message sent to the NameNode with information about the DataNode's block.
                    BlockID, TimeStamp, BlockSize, Replications

 */

syntax = "proto3";

package rs_hdfs.proto;

service DataNodeService {
  rpc SendHeartBeat(HeartBeatRequest) returns (HeartBeatResponse) {}
  rpc RegisterWithNamenode(RegistrationRequest) returns (RegistrationResponse) {}
  rpc SendBlockReport(BlockReportRequest) returns (BlockReportResponse) {}
}

message HeartBeatRequest {
  string datanode_id = 1;
}

message HeartBeatResponse {
  bool success = 1;
}

message RegistrationRequest {
  string datanode_id = 1;
  string addr = 2;
  NodeHealthMetrics health_metrics = 3;
}

message NodeHealthMetrics {
  double cpu_load = 1;
  double memory_usage = 2;
}

message RegistrationResponse {
  bool success = 1;
}

message BlockMetadata {
  string block_id = 1;
  int64 generation_timestamp = 2;
  int64 length = 3;
  int32 version = 4;
  string checksum = 5;
}


message BlockReportRequest {
  string datanode_id = 1;
  repeated BlockMetadata block_metadata = 2;

}

message BlockReportResponse {
  bool success = 1;
}
