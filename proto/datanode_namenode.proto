/*
  datanode_protocol is an RPC protocol that the datanodes use to talk to the NameNode

  The DataNodes in the cluster send two types of messages to the NameNode:

  1. HeartBeat - A signal sent to the NameNode that lets the NameNode know the DataNode is still alive
                 this information is used by the NameNode to determine whether or not to use a particular
                 DataNode's block.

                 The signal interval is configurable but defaults to 3 seconds.


  2. Registration - A signal sent to the NameNode to notify it that this datanode would like to join the cluster.

 */

syntax = "proto3";
import "common.proto";

package rs_hdfs.proto;

service DataNodeNameNodeService {
  rpc SendHeartBeat(HeartBeatRequest) returns (HeartBeatResponse) {}
  rpc RegisterWithNamenode(RegistrationRequest) returns (RegistrationResponse) {}
  rpc SendBlockReport(BlockReportRequest) returns (BlockReportResponse) {}
  rpc WriteBlockUpdate(WriteBlockUpdateRequest) returns (WriteBlockUpdateResponse) {}

}

message HeartBeatRequest {
  string datanode_id = 1;
  NodeHealthMetrics health_metrics = 2;
}

message HeartBeatResponse {
  bool success = 1;
}

message RegistrationRequest {
  string datanode_id = 1;
  string hostname_port = 2;
  NodeHealthMetrics health_metrics = 3;
}

message NodeHealthMetrics {
  float cpu_load = 1;
  uint64 memory_usage = 2;
  uint64 disk_space = 3;
}

message RegistrationResponse {
  bool success = 1;
}

message BlockReportRequest {
  repeated string block_ids = 1;
}

message BlockReportResponse {
  repeated string block_ids = 1;
}


message WriteBlockUpdateResponse {
  bool success = 1;
}

message WriteBlockUpdateRequest {
  string block_id = 1;
  BlockStatus status = 2;
}